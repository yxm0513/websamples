! function(e) {
    "use strict";
    var t = window.VAMTAM = window.VAMTAM || {};
    t.debounce = function(e, t, o) {
        var n;
        return function() {
            var a = this,
                i = arguments,
                r = o && !n;
            clearTimeout(n), n = setTimeout(function() {
                n = null, o || e.apply(a, i)
            }, t), r && e.apply(a, i)
        }
    }, t.offset = function(e) {
        var t = e.getBoundingClientRect(),
            o = window.pageXOffset || document.documentElement.scrollLeft,
            n = window.pageYOffset || document.documentElement.scrollTop;
        return {
            top: t.top + n,
            left: t.left + o
        }
    }, t.scroll_handlers = [], t.latestKnownScrollY = 0;
    var o = !1;
    t.addScrollHandler = function(e) {
        requestAnimationFrame(function() {
            e.init(), t.scroll_handlers.push(e), e.measure(t.latestKnownScrollY), e.mutate(t.latestKnownScrollY)
        })
    }, t.onScroll = function() {
        t.latestKnownScrollY = window.pageYOffset, o || (o = !0, requestAnimationFrame(function() {
            var e;
            for (e = 0; e < t.scroll_handlers.length; e++) t.scroll_handlers[e].measure(t.latestKnownScrollY);
            for (e = 0; e < t.scroll_handlers.length; e++) t.scroll_handlers[e].mutate(t.latestKnownScrollY);
            o = !1
        }))
    }, window.addEventListener("scroll", t.onScroll, {
        passive: !0
    }), t.load_script = function(e, t) {
        var o = document.createElement("script");
        o.type = "text/javascript", o.async = !0, o.src = e, t && (o.onload = t), document.getElementsByTagName("script")[0].before(o)
    }, t.load_style = function(e, t, o, n) {
        var a = document.createElement("link");
        a.rel = "stylesheet", a.type = "text/css", a.media = t, a.href = e, o && (a.onload = o), n ? n.after(a) : document.getElementsByTagName("link")[0].before(a)
    }, t.isBelowMaxDeviceWidth = function() {
        return !window.matchMedia("(min-width: " + VAMTAM_FRONT.max_breakpoint + "px)").matches
    }, t.isMaxDeviceWidth = function() {
        return window.matchMedia("(min-width: " + VAMTAM_FRONT.max_breakpoint + "px)").matches
    }, t.isMobileBrowser = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/.test(navigator.userAgent) || /Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2, t.getScrollbarWidth = (() => window.innerWidth - document.documentElement.clientWidth)
}(),
function(e, t, o) {
    "use strict";
    var n, a, i = e("header.main-header").find(".header-contents"),
        r = document.getElementById("vamtam-fallback-main-menu-toggle"),
        c = document.querySelector("#main-menu > .mega-menu-wrap > .mega-menu-toggle"),
        s = function() {
            clearTimeout(n), n = setTimeout(d, 200)
        },
        d = function() {
            window.removeEventListener("scroll", s, {
                passive: !0
            }), t.blockStickyHeaderAnimation = !1, a && a()
        },
        l = function(e, o, n) {
            requestAnimationFrame(function() {
                var o = e.offset().top;
                t.blockStickyHeaderAnimation = !0;
                var d;
                d = i.height() || 0;
                var l = o - t.adminBarHeight - d;
                a = n, window.addEventListener("scroll", s, {
                    passive: !0
                }), window.scroll({
                    left: 0,
                    top: l,
                    behavior: "smooth"
                }), e.attr("id") && (history.pushState ? history.pushState(null, null, "#" + e.attr("id")) : window.location.hash = e.attr("id")), r && r.classList.remove("mega-menu-open"), c && c.classList.remove("mega-menu-open")
            })
        };
    if (e(document.body).on("click", ".vamtam-animated-page-scroll[href], .vamtam-animated-page-scroll [href], .vamtam-animated-page-scroll [data-href]", function(t) {
            var o = e(this).prop("href") || e(this).data("href"),
                n = e("#" + o.split("#")[1]),
                a = document.createElement("a");
            a.href = o, n.length && a.pathname === window.location.pathname && (r && r.classList.remove("mega-menu-open"), c && c.classList.remove("mega-menu-open"), l(n), t.preventDefault())
        }), "" !== window.location.hash && (e('.vamtam-animated-page-scroll[href*="' + window.location.hash + '"]').length || e('.vamtam-animated-page-scroll [href*="' + window.location.hash + '"]').length || e('.vamtam-animated-page-scroll [data-href*="' + window.location.hash + '"]').length)) {
        var m = e(window.location.hash);
        m.length > 0 && e(window).add("html, body, #page").scrollTop(0), setTimeout(function() {
            l(m)
        }, 400)
    }
    document.addEventListener("DOMContentLoaded", function() {
        if ("elementorFrontend" in window && !window.elementorFrontend.isEditMode()) {
            let t, o, n = document.querySelectorAll(".vamtam-menu-click-on-hover a"),
                a = document.querySelector(".elementor-location-header"),
                i = !1,
                r = null;
            const c = function() {
                a.style.zIndex = void 0, a.style.position = void 0, e(document.body).click(), r = null, i = !1
            };
            e(document.body).on("mouseenter", ".dialog-widget-content", function() {
                clearTimeout(t)
            }), e(document.body).on("mouseleave", ".dialog-widget-content", function() {
                t = setTimeout(c, 500)
            }), e(document.body).on("mouseenter", ".menu-item-has-children", function() {
                clearTimeout(t), clearTimeout(o), c()
            }), n.forEach(function(n) {
                n.addEventListener("mouseenter", function(c) {
                    c.preventDefault(), c.stopPropagation(), r === n || i ? clearTimeout(t) : (r = n, o = setTimeout(() => {
                        a.style.zIndex = 9999, a.style.position = "relative", i = !0, e(n).click()
                    }, 200))
                }), n.addEventListener("mouseleave", function() {
                    clearTimeout(o), i ? t = setTimeout(c, 500) : (r = null, i = !1)
                })
            })
        }
    })
}(jQuery, window.VAMTAM),
function(e, t) {
    "use strict";
    window.VAMTAM = window.VAMTAM || {}, e(function() {
        var t, o;
        window.VAMTAM.adminBarHeight = document.body.classList.contains("admin-bar") ? 32 : 0, /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream && requestAnimationFrame(function() {
            document.documentElement.classList.add("ios-safari")
        }), navigator.userAgent.includes("Safari") && !navigator.userAgent.includes("Chrome") && requestAnimationFrame(function() {
            document.documentElement.classList.add("safari")
        }), navigator.userAgent.includes("Safari") && !navigator.userAgent.includes("Chrome") && requestAnimationFrame(function() {
            document.documentElement.classList.add("safari")
        }), o = document.body, window.addEventListener("scroll", function() {
            clearTimeout(t), requestAnimationFrame(function() {
                o.classList.add("disable-hover"), t = setTimeout(function() {
                    o.classList.remove("disable-hover")
                }, 300)
            })
        }, {
            passive: !0
        }), document.addEventListener("click", function(e) {
            e.target.closest(".vamtam-trigger-print") && (window.print(), e.preventDefault())
        }), window.VAMTAM.resizeElements = function() {
            e("#page .media-inner,\t\t\t\t.wp-block-embed-vimeo:not(.wp-has-aspect-ratio),\t\t\t\t:not(.wp-block-embed__wrapper) > .vamtam-video-frame").find("iframe, object, embed, video").each(function() {
                setTimeout(function() {
                    requestAnimationFrame(function() {
                        var t = this.offsetWidth;
                        this.style.width = "100%", "0" === this.width && "0" === this.height ? this.style.height = 9 * t / 16 + "px" : this.style.height = this.height * t / this.width + "px", e(this).trigger("vamtam-video-resized")
                    }.bind(this))
                }.bind(this), 50)
            }), setTimeout(function() {
                requestAnimationFrame(function() {
                    e(".mejs-time-rail").css("width", "-=1px")
                })
            }, 100)
        }, window.addEventListener("resize", window.VAMTAM.debounce(window.VAMTAM.resizeElements, 100), !1), window.VAMTAM.resizeElements()
    });
    var o = function() {
        var t = document.querySelectorAll(".vamtam-overlay-trigger"),
            o = [],
            n = window.VAMTAM.isBelowMaxDeviceWidth(),
            a = function(t) {
                var n = t.currentTarget;
                if (e(n).hasClass("elementor-menu-toggle")) {
                    var i = e(n).closest(".elementor-row");
                    i.length || (i = e(n).closest(".elementor-container")), i.hasClass("vamtam-overlay-trigger--overlay") && (i.removeClass("vamtam-overlay-trigger--overlay"), n.removeEventListener("click", a), o.forEach(function(e) {
                        e.overlayTarget !== n && e.closeTrigger !== n || (e.isActive = !1)
                    }))
                }
                e(".vamtam-overlay-trigger--overlay .vamtam-overlay-element:visible").length < 2 && (e("html, body").removeClass("vamtam-disable-scroll"), e("#scroll-to-top").removeClass("hidden"))
            },
            i = function(t) {
                var n = t.currentTarget;
                if (e(n).hasClass("elementor-menu-toggle")) {
                    var i = e(n).closest(".elementor-row");
                    if (i.length || (i = e(n).closest(".elementor-container")), i.hasClass("vamtam-menu-nav-overlay-inside") || (i.addClass("vamtam-menu-nav-overlay-inside"), e(i).find(".vamtam-overlay-element").css("top", e(i)[0].getBoundingClientRect().top + e(i).height() + "px")), i.hasClass("vamtam-overlay-trigger--overlay")) return;
                    i.addClass("vamtam-overlay-trigger--overlay"), o.forEach(function(e) {
                        e.overlayTarget !== n && e.closeTrigger !== n || (e.isActive = !0)
                    })
                }
                e("html, body").addClass("vamtam-disable-scroll"), e("#scroll-to-top").addClass("hidden"),
                    function(t) {
                        if (e(t).hasClass("elementor-menu-toggle")) t.removeEventListener("click", a), t.addEventListener("click", a)
                    }(n)
            };
        if (t.forEach(function(t) {
                if (e(t).hasClass("elementor-widget-nav-menu")) {
                    var n = e(t).find(".elementor-menu-toggle")[0];
                    n.removeEventListener("click", i), n.addEventListener("click", i), o.push({
                        overlayTarget: t,
                        closeTrigger: n,
                        isActive: !1
                    });
                    var a = e(t).closest(".elementor-row");
                    return a.length || (a = e(t).closest(".elementor-container")), void e('<span class="vamtam-overlay-element"></span>').appendTo(a)
                }
            }), t.length) {
            document.addEventListener("click", function(e) {
                o.forEach(function(t) {
                    t.isActive && (e.target === t.overlayTarget || t.overlayTarget.contains(e.target) || t.closeTrigger.click())
                })
            }, !0), window.addEventListener("resize", window.VAMTAM.debounce(function() {
                var e = window.VAMTAM.isBelowMaxDeviceWidth();
                n !== e && (o.forEach(function(e) {
                    e.isActive && e.closeTrigger.click()
                }), n = e)
            }, 200), !1)
        }
    };
    document.addEventListener("DOMContentLoaded", function() {
        window.VAMTAM.load_script(VAMTAM_FRONT.jspath + "low-priority.js"), o(), jQuery("html").css("--vamtam-scrollbar-width", window.VAMTAM.getScrollbarWidth() + "px")
    }, {
        passive: !0
    })
}(jQuery),
function(e, t, o) {
    "use strict";
    window.Cookies = window.Cookies || {
        get: function(e) {
            var t = ("; " + document.cookie).split("; " + e + "=");
            if (2 === t.length) return t.pop().split(";").shift()
        }
    }, e(function() {
        var t = e(".fixed-header-box .cart-dropdown"),
            o = e(".vamtam-cart-dropdown-link"),
            n = e(".products", o),
            a = e(".elementor-widget-woocommerce-menu-cart"),
            i = a.length,
            r = i && e(a).find(".vamtam-elementor-menu-cart__header .item-count"),
            c = "wc_add_to_cart_params" in window && window.wc_add_to_cart_params.is_cart;

        function s() {
            c && document.querySelectorAll(".woocommerce-cart-form__contents").forEach(function(t) {
                !e(t).hasClass("shop_table") && !e(t).parent().hasClass("vamtam-cart-main") && e(t).removeClass("woocommerce-cart-form__contents")
            })
        }

        function d() {
            const t = e("#elementor-menu-cart__toggle_button:visible");
            e.each(t, function(e, t) {
                t.click()
            })
        }
        e(document.body).on("applied_coupon_in_checkout", function() {
            let e = document.querySelector(".woocommerce-error");
            e && e.scrollIntoView({
                block: "center",
                behavior: "smooth"
            })
        }), !("elementorFrontend" in window && window.elementorFrontend.isEditMode()) ? e(document).ready(function() {}) : e(window).on("elementor/frontend/init", function() {
            window.elementor.on("document:loaded", function() {
                setTimeout(function() {}, 1e3)
            })
        });
        var l = function(t) {
                const o = e(".elementor-widget-woocommerce-menu-cart .elementor-menu-cart__toggle_button");
                let n = !1;
                if (e.each(o, function(o, a) {
                        if (e(a).is(t.target) || e(a).has(t.target).length) return n = !0, !1
                    }), n) {
                    if (t.preventDefault(), c) return t.stopImmediatePropagation(), !1;
                    if (window.VAMTAM.isMobileBrowser) return t.stopImmediatePropagation(), window.location = window.wc_add_to_cart_params.cart_url, !1;
                    e("body").addClass("vamtam-disable-scroll"), e("#scroll-to-top").addClass("hidden");
                    var a = e(t.target).closest(".elementor-section-wrap").find("section.elementor-element").first();
                    a.css("will-change", "transform"), a.css("z-index", "1000")
                }
            },
            m = function(t, o) {
                (e(t.target).hasClass("elementor-menu-cart__container") || e(t.target).hasClass("vamtam-close-cart") || "no-target" === t && o) && (e("body").removeClass("vamtam-disable-scroll"), e("#scroll-to-top").removeClass("hidden"), e(t.target).closest("section.elementor-element").css("z-index", ""))
            };

        function u() {
            document.querySelectorAll(".elementor-widget-woocommerce-menu-cart .elementor-menu-cart__toggle_wrapper").forEach(function(e) {
                e.removeEventListener("click", l), e.addEventListener("click", l, !0)
            }), document.querySelectorAll(".elementor-widget-woocommerce-menu-cart .elementor-menu-cart__container .elementor-menu-cart__close-button, .elementor-widget-woocommerce-menu-cart .elementor-menu-cart__container").forEach(function(e) {
                e.removeEventListener("click", m), e.addEventListener("click", m)
            })
        }

        function f(t) {
            var o = e("#scroll-to-top.vamtam-scroll-to-top");
            o.length && (t ? o.css("bottom", "10px") : o.css("bottom", "95px"))
        }

        function w(t) {
            if (t) {
                e(".woocommerce-notices-wrapper").empty().append(t);
                var o = e(".woocommerce-notices-wrapper").find(".vamtam-close-notice-btn");
                if (!o.length) return;
                o[0].addEventListener("click", function() {
                    var t = e(this).closest(".woocommerce-message");
                    t.fadeOut("fast"), f(!0), setTimeout(function() {
                        t.remove()
                    }, 2e3)
                }), setTimeout(function() {
                    var e = o.closest(".woocommerce-message");
                    e.fadeOut("fast"), setTimeout(function() {
                        e.remove(), f(!0)
                    }, 2e3)
                }, 1e4)
            }
        }
        u(), e(document.body).on("added_to_cart removed_from_cart wc_fragments_refreshed wc_fragments_loaded", function() {
            var o = parseInt(Cookies.get("woocommerce_items_in_cart") || 0, 10);
            if (o > 0)
                if (i) {
                    a.removeClass("hidden");
                    var c = a[0].querySelectorAll(".cart_item .quantity select"),
                        d = !1,
                        l = a.find("#elementor-menu-cart__toggle_button .elementor-button-icon");
                    c.length || (c = a[0].querySelectorAll(".cart_item .product-quantity"), d = !0);
                    var w = 0;
                    c.forEach(function(e) {
                        const t = d ? e.textContent : e.value;
                        w += parseInt(t, 10)
                    }), r.text("(" + w + ")"), e.each(l, function(t, o) {
                        const n = parseInt(e(o).attr("data-counter"), 10);
                        w !== n && e(o).attr("data-counter", w)
                    })
                } else {
                    var h = 0,
                        v = document.querySelector(".widget_shopping_cart"),
                        p = v ? v.querySelectorAll("li .quantity") : [];
                    if (v) {
                        for (var g = 0; g < p.length; g++) h += parseInt(p[g].innerHTML.split("<span")[0].replace(/[^\d]/g, ""), 10);
                        h = h >= 0 ? h : "", n.text(h), n.removeClass("cart-empty"), t.removeClass("hidden")
                    }
                }
            else if (i) {
                var _ = a.hasClass("elementor-menu-cart--empty-indicator-hide");
                a.toggleClass("hidden", _), r.text("(0)"), m("no-target", !0)
            } else {
                var y = t.hasClass("show-if-empty");
                n.addClass("cart-empty"), n.text("0"), t.toggleClass("hidden", !y)
            }
            document.body.classList.toggle("vamtam-wc-cart-empty", 0 === o), !!e("body").hasClass("single-product") && e(".woocommerce-notices-wrapper .woocommerce-message").length && f(), u(), s()
        }), e(document).on("click", '.woocommerce-cart button[name="apply_coupon"]', function(t) {
            t.preventDefault(), e('input[type="submit"][name="apply_coupon"]').trigger("click")
        }), "yes" === window.VAMTAM_FRONT.enable_ajax_add_to_cart && e(document).on("click", ".single_add_to_cart_button, .products.vamtam-wc.table-layout .add_to_cart_button:not(.product_type_variable)", function(t) {
            var o = e(this),
                n = o.closest("form.cart"),
                a = o.val(),
                r = n.find("input[name=quantity]").val() || 1,
                c = n.find("input[name=product_id]").val() || a,
                s = n.find("input[name=variation_id]").val() || 0,
                l = s,
                m = n.find("input[name=add-to-cart].wc-booking-product-id").val(),
                u = n.hasClass("grouped_form"),
                f = n.parent(".elementor-product-external").length && "get" === n.attr("method"),
                h = o.closest(".products.vamtam-wc.table-layout").length,
                v = {};
            if (l) {
                if (o.parents(".elementor-widget-woocommerce-product-add-to-cart.vamtam-has-disable-theme-ajax-vars").length) return
            }
            if (t.preventDefault(), f) window.open(n.attr("action"), "_blank");
            else if (window.wc_add_to_cart_params) {
                if (u) {
                    c = parseInt(n.find("input[name=add-to-cart]").val());
                    var p = n.find('[id^="product-"]');
                    e.each(p, function(t, o) {
                        var n, a = e(o).find(".add_to_cart_button"),
                            i = e(o).attr("id").substr(8);
                        n = a.length ? parseInt(a.attr("data-quantity")) || 0 : parseInt(e(o).find("input.qty").val()) || 0, v[i] = n
                    })
                }
                if (h) {
                    const e = o.closest("tr.vamtam-product");
                    e.length && (r = e.find("input[name=quantity]").val() || 1, c = o.attr("data-product_id") || a)
                }
                var g = {};
                if (m) {
                    new FormData(n[0]).forEach(function(e, t) {
                        "add-to-cart" === t ? g.product_id = e : g[t.replace("wc_bookings_field", "")] = e, g[t] = e
                    }), g.is_wc_booking = !0
                } else if (u) g = {
                    product_id: c,
                    products: v,
                    is_grouped: !0
                };
                else if (l) {
                    g = {
                        product_id: c,
                        is_variable: !0
                    }, new FormData(n[0]).forEach(function(e, t) {
                        "add-to-cart" === t ? g.product_id = e : g[t] = e
                    })
                } else g = {
                    product_id: c
                };
                return g.product_sku = "", g.quantity = r, g.variation_id = s, g.action = "woocommerce_ajax_add_to_cart", e(document.body).trigger("adding_to_cart", [o, g]), e.ajax({
                    type: "post",
                    url: window.wc_add_to_cart_params.ajax_url,
                    data: g,
                    beforeSend: function() {
                        o.removeClass("added").addClass("loading")
                    },
                    complete: function(e) {
                        e.error ? o.removeClass("loading") : o.addClass("added").removeClass("loading")
                    },
                    success: function(t) {
                        if (t.error) w(t.notice), e(document.body).trigger("wc_fragments_refreshed");
                        else {
                            if (t.redirect_to_cart) return void(window.location = window.wc_add_to_cart_params.cart_url);
                            if (i)
                                if (h) {
                                    !window.VAMTAM.isMobileBrowser && o.parents('.vamtam-has-adc-triggers-menu-cart[data-widget_type="woocommerce-products.products_table_layout"]').length && d()
                                } else {
                                    !window.VAMTAM.isMobileBrowser && d()
                                }
                            else w(t.fragments.notice);
                            e(document.body).trigger("added_to_cart", [t.fragments, t.cart_hash, o])
                        }
                    }
                }), !1
            }
        }), window.wc_add_to_cart_params && e(document).on("click", ".mini_cart_item a.remove, .woocommerce-mini-cart .woocommerce-cart-form__cart-item .product-remove > a:not([class])", function(t) {
            t.preventDefault();
            var o = e(this),
                n = e(this).attr("data-product_id"),
                a = e(this).attr("data-cart_item_key"),
                i = e(this).parents(".mini_cart_item, .woocommerce-cart-form__cart-item");
            e.ajax({
                type: "post",
                dataType: "json",
                url: window.wc_add_to_cart_params.ajax_url,
                data: {
                    action: "product_remove",
                    product_id: n,
                    cart_item_key: a
                },
                beforeSend: function() {
                    i.css("pointer-events", "none").css("opacity", "0.5"), e("body").css("cursor", "wait")
                },
                complete: function() {
                    e("body").css("cursor", "default")
                },
                success: function(t) {
                    t && t.fragments ? e(document.body).trigger("removed_from_cart", [t.fragments, t.cart_hash, o]) : window.location = o.attr("href")
                },
                error: function() {
                    window.location = o.attr("href")
                }
            })
        }), e(document).on("change", ".woocommerce-cart-form__cart-item .vamtam-quantity > select", function(t) {
            t.preventDefault();
            var o = e(".woocommerce-cart").length,
                n = e(this).val(),
                a = e(this).attr("data-product_id"),
                i = e(this).attr("data-cart_item_key"),
                r = e(this).parents(".mini_cart_item, .woocommerce-cart-form__cart-item");
            if (o) {
                var c = e('input[type="submit"][name="update_cart"]');
                return c.prop("disabled", !1), void c.trigger("click")
            }
            window.wc_add_to_cart_params && e.ajax({
                type: "post",
                dataType: "json",
                url: window.wc_add_to_cart_params.ajax_url,
                data: {
                    action: "update_item_from_cart",
                    product_id: a,
                    cart_item_key: i,
                    product_quantity: n
                },
                beforeSend: function() {
                    r.css("pointer-events", "none").css("opacity", "0.5"), e("body").css("cursor", "wait")
                },
                complete: function() {
                    r.css("pointer-events", "auto").css("opacity", "1"), e("body").css("cursor", "default")
                },
                success: function(t) {
                    t && t.fragments && e(document.body).trigger("wc_fragment_refresh")
                },
                error: function() {}
            })
        }), window.addEventListener("load", function() {
            ! function() {
                const t = e(document.body).hasClass("woocommerce-checkout"),
                    o = t && e("form.checkout"),
                    n = t && e(".woocommerce > .woocommerce-notices-wrapper").first();
                if (!t || !o.length || !n.length) return;
                e(document.body).on("checkout_error", function() {
                    const e = o.find(".woocommerce-NoticeGroup.woocommerce-NoticeGroup-checkout");
                    n.append(e)
                })
            }(), i && (u(), s())
        })
    })
}(jQuery, window.VAMTAM),
function(e, t) {
    "use strict";
    window.VAMTAM = window.VAMTAM || {}, window.VAMTAM.CUSTOM_ANIMATIONS = {}, e(function() {
        window.VAMTAM.CUSTOM_ANIMATIONS = {
            init: function() {
                this.VamtamCustomAnimations.init()
            },
            onDomReady: function() {
                this.VamtamCustomAnimations.scrollBasedAnims()
            },
            VamtamCustomAnimations: {
                init: function() {
                    this.registerAnimations(), this.utils.watchScrollDirection()
                },
                registerAnimations: function() {
                    var e = this;
                    ["stickyHeader"].forEach(function(t) {
                        e[t].apply(e)
                    })
                },
                stickyHeader: function() {
                    var t = e(".vamtam-sticky-header"),
                        o = this;
                    t.length && (t.length > 1 && (t = t[0]), function() {
                        var n, a = e(t).hasClass("vamtam-sticky-header--transparent-header"),
                            i = !window.elementorFrontend.isEditMode(),
                            r = function() {
                                e(t).removeClass("vamtam-sticky-header--fixed-shown"), e(t).hasClass("vamtam-sticky-header--fixed-hidden") || e(t).addClass("vamtam-sticky-header--fixed-hidden"), n = "fixedHiddenState"
                            },
                            c = function() {
                                e(t).removeClass("vamtam-sticky-header--fixed-shown"), e(t).removeClass("vamtam-sticky-header--fixed-hidden"), n = "noAnimState"
                            };

                        function s() {
                            if (i) {
                                var o = e(t).innerHeight();
                                e(t).css("margin-bottom", "-" + o + "px"), e(t).next(".vamtam-prevent-scroll-jumps").css("padding-top", o + "px")
                            }
                        }
                        i && e(t).after('<div class="vamtam-prevent-scroll-jumps"></div>'), window.VAMTAM.isMaxDeviceWidth() && (s(), setTimeout(() => {
                            ! function() {
                                if (!e("body").hasClass("e--ua-webkit")) return;
                                const t = e(".vamtam-sticky-header").find(".elementor-icon-wrapper > .elementor-icon");
                                e.each(t, function(t, o) {
                                    const n = e(o),
                                        a = n.height(),
                                        i = n.parent(),
                                        r = n.parent().height();
                                    Math.abs(a - r) > 5 && i.css("height", r - 1 + "px")
                                })
                            }(), s()
                        }, 50)), window.pageYOffset >= 300 && r();
                        var d, l = null,
                            m = window.scrollY;
                        window.addEventListener("scroll", function(i) {
                            null !== l && clearTimeout(l), l = setTimeout(function() {
                                m = window.scrollY
                            }, 500);
                            var u = window.VAMTAM.debounce(function() {
                                if ("#document" === i.target.nodeName) {
                                    if (!(() => !e(t).find("a:hover").length && !e(".vamtam-header-mega-menu:visible").length)()) return;
                                    var s = o.utils.getScrollDirection();
                                    if (d !== s && (m = window.scrollY), d = s, Math.abs(window.scrollY - m) < 80 && window.scrollY > 80) return;
                                    if ("up" === s) return void(window.pageYOffset >= 300 ? "fixedShownState" !== n && (e(t).removeClass("vamtam-sticky-header--fixed-hidden"), e(t).hasClass("vamtam-sticky-header--fixed-shown") || e(t).addClass("vamtam-sticky-header--fixed-shown"), n = "fixedShownState") : "noAnimState" !== n && c());
                                    if ("down" === s && (window.pageYOffset >= 300 || a)) {
                                        var l = !e(t).find(".elementor-menu-cart--shown").length;
                                        "fixedHiddenState" !== n && l && r()
                                    }
                                }
                            }, 200);
                            window.VAMTAM.isMaxDeviceWidth() ? (s(), requestAnimationFrame(u)) : "noAnimState" !== n && c()
                        }, {
                            passive: !0
                        })
                    }())
                },
                observedAnims: function() {
                    var t = "vamtam-animate",
                        o = document.querySelectorAll(".vamtam-observe");
                    if (o.length) {
                        var n, a = function(o, n) {
                            o.forEach(function(o) {
                                var a = !1,
                                    i = o.target,
                                    r = i && e(i);
                                o.isIntersecting && (a = !0), a ? (r.hasClass(t) || (r.addClass(t), r.trigger("vamtam:animate")), r.hasClass("vamtam-looped") || n && n.unobserve && n.unobserve(i)) : r.hasClass(t) && r.removeClass(t)
                            })
                        };
                        o.forEach(function(o) {
                            e(o).removeClass(t), n || (n = new IntersectionObserver(a)), n.observe(o)
                        })
                    }
                },
                scrollBasedAnims: function() {
                    var t = document.querySelectorAll(['[data-settings*="growFromLeftScroll"]', '[data-settings*="growFromRightScroll"]'].join(", "));
                    if (!t.length) return;
                    var o, n = {},
                        a = this,
                        i = function(e) {
                            e.forEach(function(e) {
                                var t = e.boundingClientRect.y,
                                    o = e.isIntersecting,
                                    i = e.target,
                                    r = Math.abs(parseFloat((100 * e.intersectionRatio).toFixed(2))),
                                    c = n[i.dataset.vamtam_anim_id].lastScrollPercentage,
                                    s = n[i.dataset.vamtam_anim_id].lastScrollY,
                                    d = n[i.dataset.vamtam_anim_id].animateEl,
                                    l = function() {
                                        window.requestAnimationFrame(function() {
                                            d.style.setProperty("--vamtam-scroll-ratio", r + "%")
                                        })
                                    };
                                o && s !== t && ("down" === a.utils.getScrollDirection() ? c < r && l() : l()), n[i.dataset.vamtam_anim_id].lastScrollY = t, n[i.dataset.vamtam_anim_id].lastScrollPercentage = r
                            })
                        };
                    const r = function() {
                        var e, t = [];
                        for (e = 1; e <= 50; e++) {
                            var o = e / 50;
                            t.push(o)
                        }
                        return t.push(0), t
                    }();
                    t.forEach(function(t) {
                        var a;
                        o || (o = new IntersectionObserver(i, {
                            root: null,
                            rootMargin: "20% 0% 20% 0%",
                            threshold: r
                        }));
                        if (t.style.setProperty("--vamtam-scroll-ratio", "1%"), t.classList.contains("elementor-widget") || t.classList.contains("elementor-column"))(a = t.parentElement).setAttribute("data-vamtam_anim_id", t.dataset.id);
                        else {
                            e(t).before('<div class="vamtam-scroll-anim-wrap" data-vamtam_anim_id="' + t.dataset.id + '"></div>');
                            var c = e(t).prev(".vamtam-scroll-anim-wrap");
                            e(c).append(t), a = c[0]
                        }
                        n[t.dataset.id] = {
                            lastScrollY: "",
                            lastScrollPercentage: "",
                            observeEl: a,
                            animateEl: t
                        }, o.observe(a)
                    })
                },
                utils: {
                    getAdminBarHeight: function() {
                        return window.VAMTAM.adminBarHeight
                    },
                    watchScrollDirection: function() {
                        var e = function() {
                            return this.lastScrollTop = 0, this.utils = this, {
                                init: function() {},
                                measure: function(e) {
                                    this.direction = e > this.lastScrollTop ? "down" : "up"
                                }.bind(this),
                                mutate: function(e) {
                                    this.utils.getScrollDirection = function() {
                                        return this.direction
                                    }, this.lastScrollTop = e <= 0 ? 0 : e
                                }.bind(this)
                            }
                        }.bind(this);
                        window.VAMTAM.addScrollHandler(e())
                    },
                    isTouchDevice: function() {
                        const e = " -webkit- -moz- -o- -ms- ".split(" ");
                        return !!("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch) || function(e) {
                            return window.matchMedia(e).matches
                        }(["(", e.join("touch-enabled),("), "heartz", ")"].join(""))
                    }
                }
            }
        }, window.VAMTAM.CUSTOM_ANIMATIONS.init(), e(window).ready(function() {
            window.VAMTAM.CUSTOM_ANIMATIONS.onDomReady()
        })
    })
}(jQuery);